@startuml
skinparam defaultTextAlignment left
caption Behavior of thing PIM
[*] --> PIM_behavior
state PIM_behavior{
state Build{
state Alive1_1{
	Alive1_1 : entry / ...\n

Alive1_1 --> Alive2_1 : alv:get_sensor?iamalive1\naction ...\n

Alive1_1 --> SetThermostat : alv:get_sensor?iamalive2\naction ...\n
}
state Alive2_1{

Alive2_1 --> SetThermostat : alv:get_sensor?iamalive2
}
state SetThermostat{
	SetThermostat : entry / ...\n


SetThermostat --> SetThermostat : human_input?SwitchOff\naction ...\n\n||human_input?SwitchOn\naction ...\n
}
[*] --> Alive1_1

Build --> Running : set_temp:human_input?set_temperature\naction ...\n

Build --> Build : tmout:guard_human?timer_timeout\naction ...\n
	Build : givedelta:human_input?set_delta / \naction ...\n
	Build : fetch:human_input?fetch_temp / \naction ...\n
	Build : temp:get_sensor?temperature / \naction ...\n
	Build : get_sensor?iamalive1 / \naction ...\n
	Build : get_sensor?iamalive2 / \naction ...\n
	Build : entry / ...\n
	Build : exit / ...\n
}
state Running{
state Thermostat{
state TemprDecide{

TemprDecide --> TemprDecrease : [lasttemp >= tmrature - delta]\naction ...\n

TemprDecide --> TemprIncrease : [lasttemp < tmrature - delta]\naction ...\n
}
state TemprIncrease{
	TemprIncrease : entry / ...\n
	TemprIncrease : exit / ...\n




TemprIncrease --> TemprIncrease : fetch:human_input?fetch_temp\naction ...\n\n||givedelta:human_input?set_delta\naction ...\n\n||timout:guard_temperature?timer_timeout\naction ...\n\n||temp:get_sensor?temperature[temp.t <= tmrature + delta]\naction ...\n

TemprIncrease --> TemprDecrease : temp2:get_sensor?temperature[temp2.t > tmrature + delta]\naction ...\n
}
state TemprDecrease{
	TemprDecrease : entry / ...\n
	TemprDecrease : exit / ...\n


TemprDecrease --> TemprDecrease : timout:guard_temperature?timer_timeout\naction ...\n\n||temp:get_sensor?temperature[temp.t >= tmrature - delta]\naction ...\n



TemprDecrease --> TemprIncrease : fetch:human_input?fetch_temp\naction ...\n\n||givedelta:human_input?set_delta\naction ...\n\n||temp2:get_sensor?temperature[temp2.t < tmrature - delta]\naction ...\n
}
[*] --> TemprDecide

Thermostat --> On : swon:human_input?SwitchOn\naction ...\n

Thermostat --> Off : swoff:human_input?SwitchOff\naction ...\n

Thermostat --> Thermostat : set_temp:human_input?set_temperature\naction ...\n
}
state On{

On --> Off : swoff:human_input?SwitchOff\naction ...\n


On --> On : temp:get_sensor?temperature\naction ...\n\n||swon:human_input?SwitchOn\naction ...\n

On --> Thermostat : set_temp:human_input?set_temperature\naction ...\n
}
state Off{


Off --> Off : temp:get_sensor?temperature\naction ...\n\n||swoff:human_input?SwitchOff\naction ...\n

Off --> On : swon:human_input?SwitchOn\naction ...\n

Off --> Thermostat : set_temp:human_input?set_temperature\naction ...\n
}
[*] --> Thermostat






Running --> Running : temp:get_sensor?temperature\naction ...\n\n||human_input?set_temperature\naction ...\n\n||human_input?SwitchOff\naction ...\n\n||human_input?SwitchOn\naction ...\n\n||fetch:human_input?fetch_temp\naction ...\n\n||givedelta:human_input?set_delta\naction ...\n
	Running : get_sensor?iamalive1 / \naction ...\n
	Running : get_sensor?iamalive2 / \naction ...\n
}
[*] --> Build
	PIM_behavior : entry / ...\n
}
@enduml
