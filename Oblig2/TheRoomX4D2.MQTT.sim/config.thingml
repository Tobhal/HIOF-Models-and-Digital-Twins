import "javatimer.thingml"
import "timer.thingml"
import "pim.thingml"
import "psm.thingml"
import "io.thingml"
import "energy_saver.thingml"
import "test.thingml"

configuration X3D_MQTT_TTY {
	instance T1:MQTTDriver
	instance pim:PIM
	instance myself:Human
	
	instance g_temp:TimerJava
	instance g_humn:TimerJava
	
	instance night_day_timer:TimerJava
	instance es:EnergySaver
	
	/* 
	PSM
	*/
	connector T1.provide_temp => pim.get_sensor
	connector T1.provide_luminance => es.get_es_cmd // es gets luminenced
	// Receive values from Openhab connected sensors via MQTT protocol
	connector T1.MQTT over MQTT	
		
	/* 
	Human
	*/
	connector myself.send_cmd_temp => pim.human_input	// for: switchOn, switchOff, fetch_temp
	connector myself.send_cmd_temp => es.get_es_cmd		// for: set_temperature, set_delta
	// TTY communication on console (see psm.thingml and io.thingml)
	connector myself.get_values over stdio
	connector myself.TTYin_temp over stdio
	
	/*
	ES
	*/
	connector es.send_es_cmd => pim.es_input 		// pim gets set_temp
	connector es.request_sensor => T1.require_val 	// To add lightsensor
	connector es.timer_port => night_day_timer.timer
	
	/* 
	PIM outwards 
	*/
	connector pim.request_sensor => T1.require_val
	connector pim.request_actuator => T1.require_val
	connector pim.human_output => myself.TTYout
	
	connector pim.guard_temperature =>g_temp.timer
	connector pim.guard_human => g_humn.timer
}