import "javatimer.thingml"
import "timer.thingml"
import "pim.thingml"
import "psm.thingml"
import "io.thingml"
import "energy_saver.thingml"
import "test.thingml"
import "room_shadow.thingml"

configuration X3D_MQTT_TTY {
	instance T1:MQTTDriver
	instance pim:PIM
	instance myself:Human
	
	instance g_temp:TimerJava
	instance g_humn:TimerJava
	
	instance night_day_timer:TimerJava
	instance es:EnergySaver
	
	// PSM	
	connector T1.provide_temp => pim.get_sensor
	connector T1.provide_luminance => es.get_es_cmd // es gets luminenced
		
	// HMI
	connector myself.send_cmd_temp => pim.human_input
	
	//ES
	connector es.send_es_cmd => pim.es_input // pim gets set_temp
	connector es.timer_port => night_day_timer.timer
	connector es.request_sensor => T1.require_val // To add lightsensor
	
	// PIM outwards 
	connector pim.request_sensor => T1.require_val
	connector pim.request_actuator => T1.require_val
	connector pim.human_output => myself.TTYout
	
	connector pim.guard_temperature => g_temp.timer
	connector pim.guard_human => g_humn.timer

	// TTY communication on console (see psm.thingml and io.thingml)
	connector myself.get_values over stdio
	connector myself.TTYin_temp over stdio
	
	//Receive values from Openhab connected sensors via MQTT protocol
	connector T1.MQTT over MQTT	
	
	
	// Shadow
	instance sample_interval:TimerJava
	instance room_shadow:RoomShadow
	connector room_shadow.timer_port => sample_interval.timer
	connector room_shadow.shadow_mqtt => T1.MQTT
}