@startuml
skinparam defaultTextAlignment left
caption Behavior of thing MQTTDriver
[*] --> behaviorMQTTDriver
state behaviorMQTTDriver{
state Alive1{
	Alive1 : entry / do\n	provide_temp!iamalive1()\nend\n

Alive1 --> Alive2 : alv:require_val?iamalive1\naction do\n	provide_temp!iamalive2()\nend\n

Alive1 --> Idle : alv:require_val?iamalive2\naction do\n	provide_temp!iamalive2()\nend\n
}
state Alive2{

Alive2 --> Idle : alv:require_val?iamalive2
}
state Idle{

Idle --> Idle : put_t:MQTT?temperature\naction do\n	id_s = put_t.id\n	i = 0\n	found = false\n	while (i < last_thermo and (not found)) do\n		if (id_s == thermometers [i]) do\n			found = true // trick to terminate while loop\n		end\n		i = i + 1\n	end\n	if (found) do\n		thermoval[i - 1] = put_t.t\n		provide_temp!temperature(id_s, thermotext [i], put_t.t)\n	end\nend\n

Idle --> Idle : addt:require_val?add_thermometer\naction do\n	id_s = addt.id\n	thermometers[last_thermo] = id_s\n	thermotext[last_thermo] = addt.txt\n	thermoval[last_thermo] = 20 // just a default temperature\n	last_thermo = last_thermo + 1\nend\n

Idle --> Idle : add_dev:require_val?add_device\naction do\n	did = add_dev.did\n	onoffswitches[last_onoff] = did\n	last_onoff = last_onoff + 1\nend\n

Idle --> Idle : swon:require_val?SwitchOn\naction do\n	did = swon.did\n	i = 0\n	found = false\n	while (i < last_onoff and (not found)) do\n		if (did == onoffswitches [i]) do\n			found = true // trick to terminate while loop\n		end\n		i = i + 1\n	end\n	if (found) do\n		MQTT!SwitchOn(did)\n	end\nend\n

Idle --> Idle : swoff:require_val?SwitchOff\naction do\n	did = swoff.did\n	i = 0\n	found = false\n	while (i < last_onoff and (not found)) do\n		if (did == onoffswitches [i]) do\n			found = true // trick to terminate while loop\n		end\n		i = i + 1\n	end\n	if (found) do\n		MQTT!SwitchOff(did)\n	end\nend\n
}
[*] --> Alive1
}
@enduml
