@startuml sequense diagram
mainframe Normal day new

participant "simulation:sim" as sim
participant "psm:PSM" as psm
participant "pim:PIM" as pim
participant "energy_saver:ES" as es
actor "myself:Human" as human

'Set preferred temp
es <- human: set_temperature(prefered_temp{23})
pim <- es: set_temperature(prefered_temp{23})

psm <- pim: add_light_sensor(1, "")

psm <- pim: add_thermometer(1, "")
psm <- pim: add_device(didid1, didtxt1)

pim -> human: prompt("Now entering thermostat")

hnote across: day and light on
'setup compleat

sim -> psm: toMQTT!temperature(1, "", 15)
psm -> pim: provide_temp!temperature(1, "", 15)

psm <- pim: request_actuator!switch_on(1)
sim <- psm: MQTT!switch_on(1)

hnote across: some time later

sim -> psm: toMQTT!temperature(1, "", 25)
psm -> pim: provide_temp!temperature(1, "", 25)

psm <- pim: request_actuator!switch_off(1)
sim <- psm: MQTT!switch_off(1)

hnote across: lights off

sim -> psm: to!MQTT!luminence(1, "", 100)
psm -> pim: provide_temp!luminence(1, "", 100)
pim -> es: human_output!luminence(1, "", 100)

pim <- es: provide_cmd!set_temperature(prefered_temp{23} - temp_diff{2})

hnote across: some time later

sim -> psm: toMQTT!temperature(1, "", 19)
psm -> pim: provide_temp!temperature(1, "", 19)

psm <- pim: request_actuator!switch_on(1)
sim <- psm: MQTT!switch_on(1)

hnote across: night start
hnote over es: Timer day/night toggle

pim <- es: provide_cmd!set_temperature(prefered_temp{23} - temp_night_diff{8})

psm <- pim: request_actuator!switch_off(1)
sim <- psm: MQTT!switch_off(1)

hnote across: some time later

sim -> psm: toMQTT!temperature(1, "", 14)
psm -> pim: provide_temp!temperature(1, "", 14)

psm <- pim: request_actuator!switch_on(1)
sim <- psm: MQTT!switch_on(1)

hnote across: day start
hnote over es: Timer day/night toggle

pim <- es: set_temperature(prefered_temp{23} - temp_diff{2})

@enduml
