import "javatimer.thingml"
import "timer.thingml"
import "pim.thingml"
import "psm.thingml"
import "io.thingml"
import "energy_saver.thingml"
import "test.thingml"


configuration X3D_MQTT_SIM {
	instance T1:MQTTDriver
	instance pim:PIM
	instance myself:Human
	
	instance g_temp:TimerJava
	instance g_humn:TimerJava
	
	instance night_day_timer:TimerJava
    instance es:EnergySaver
    
    instance sim:Simulation
	
	// PSM	
	connector T1.provide_temp => pim.get_sensor
	connector T1.provide_luminance => es.get_es_cmd // es gets luminence
	

	
	// Simulation
	connector sim.toMQTT => T1.MQTT // but it also works the other way
	
	// Human
	connector myself.send_cmd => pim.human_input 
	connector myself.send_cmd => es.get_es_cmd // es gets set_luminence and set_temperature
	
	//ES
	connector es.send_es_cmd => pim.es_input // pim gets set_temp
	connector es.timer_port => night_day_timer.timer
	connector es.request_sensor => T1.require_val // To add lightsensor
	
	// PIM outwards 
	connector pim.request_sensor => T1.require_val
	connector pim.request_actuator => T1.require_val
	
	connector pim.human_output => myself.get_values // human gets temp and prompt

	connector pim.guard_temperature =>g_temp.timer
	connector pim.guard_human => g_humn.timer
	
}
