import "datatypes.thingml" from stl
import "pim_messages.thingml"
import "timestuff.thingml"


thing EnergySaver includes TemperatureMsg, LuminanceMsg, GeneralMsg, TimeStuff{
     
    // Sends
    required port provide_cmd {
        sends set_temperature,
        	add_lightsensor  	 
    }
    
	// Receives
    provided port get_cmd {
        receives temperature,
        		luminance,
        		set_luminance,
        		set_temperature,
        		fetch_lum  	
	}
	
    property temp:Double = 20           // Store comfort temperature
    property temp_ID:Integer
    	
    property lights_off_temp:Double = 2 // Store temperature offset for when lights are off
    property night_temp_delta:Double = 8           // Store temperature offset for when there is night

	property lum_ID:Integer
    property last_lum: Double = 1000    // Last recored luminance value
    property lum_threshold: Double = 1000   // Threshold for when the room is dart or not
	property lumSens_id:Integer

    statechart ES_behavior init present {
        on entry do
            println("Running Energy saver (ES)")
				provide_cmd!add_lightsensor(lumSens_id) // We have only one light sensor in this system
        end
        state present {
            // Get comfort temperature from human
            // and set it for pim
            transition -> present
            event get_temp:get_cmd?set_temperature
            action do
                temp = get_temp.t
				print("This is the target temp now: " + temp)

           		end
           	// Fetch luminance threshold
           	transition -> present
        	event fetch:get_cmd?set_luminance
			action do
				// reporting the luminance value
				lum_threshold = fetch.lum
			end
			
            // Check luminance		
			transition -> present
			event get_lum: get_cmd?luminance
			action do
					last_lum = get_lum.lum				
				end
			
			// If people present, get set to comfort temperature
			transition -> present
			guard last_lum>lum_threshold
			action do
				provide_cmd!set_temperature(temp) // if the office is not dark
			end
			
			// If night and no one is present
			transition -> night
			guard last_lum<=lum_threshold
			action do
				var isnight:Boolean = Night(Now())	//Check if it's night and no one present
						if (isnight) do
							provide_cmd!set_temperature(temp-night_temp_delta)
						end
			end
			
			// If night and one is present
			transition -> night
			guard last_lum>lum_threshold
			action do
				var isnight:Boolean = Night(Now())
						if (isnight) do
							provide_cmd!set_temperature(temp-lights_off_temp)
						end
			end
			
			// If day and one is present
			transition -> day
			guard last_lum>lum_threshold
			action do
				var isnight:Boolean = Night(Now())	//Check if it's day and people present
						if (isnight == false) do
							provide_cmd!set_temperature(temp-lights_off_temp)
						end
			end
        }
        state day {}
        state night{}
    }
    
}